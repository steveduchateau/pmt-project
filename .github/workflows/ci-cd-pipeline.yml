name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ou la branche que tu choisis, comme `master` ou `develop`

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Environnement de test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Mise à jour vers v3 pour assurer la compatibilité avec Node.js 20

      # Étape 1 : Construction du projet frontend
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3  # Mise à jour vers v3 pour utiliser Node.js 20
        with:
          node-version: '20'  # Spécifie explicitement la version de Node.js (ici, Node.js 20)
      - name: Install frontend dependencies
        run: |
          cd Desktop/tool_project/pmt-frontend  # Spécifie le chemin correct
          npm install  # Installation des dépendances frontend
      - name: Build frontend project
        run: |
          cd Desktop/tool_project/pmt-frontend  # Spécifie le chemin correct
          npm run build  # Build du projet frontend

      # Étape 2 : Tests du frontend
      - name: Run frontend tests
        run: |
          cd Desktop/tool_project/pmt-frontend  # Spécifie le chemin correct
          npm run test -- --watch=false  # Exécute les tests frontend

      # Étape 3 : Construction du projet backend
      - name: Set up Java for backend
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Spécifie la version de Java pour le backend
      - name: Install backend dependencies
        run: |
          cd Desktop/tool_project/pmt-backend2  # Spécifie le chemin correct
          ./mvnw install  # Installation des dépendances backend
      - name: Build backend project
        run: |
          cd Desktop/tool_project/pmt-backend2  # Spécifie le chemin correct
          ./mvnw package  # Construction du backend (ajuste cette commande selon ton projet)

      # Étape 4 : Tests du backend
      - name: Run backend tests
        run: |
          cd Desktop/tool_project/pmt-backend2  # Spécifie le chemin correct
          ./mvnw test  # Exécution des tests backend

  dockerize-and-publish:
    needs: build-and-test  # Ce job dépend des tests du job précédent
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Mise à jour vers v3 pour éviter les avertissements

      # Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utiliser un secret GitHub pour ton nom d'utilisateur Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utiliser un secret GitHub pour ton mot de passe Docker Hub

      # Étape 1 : Dockerisation et push de l'image Docker pour le frontend
      - name: Build and push frontend Docker image
        run: |
          cd Desktop/tool_project/pmt-frontend  # Spécifie le chemin correct
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest

      # Étape 2 : Dockerisation et push de l'image Docker pour le backend
      - name: Build and push backend Docker image
        run: |
          cd Desktop/tool_project/pmt-backend2  # Spécifie le chemin correct
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
