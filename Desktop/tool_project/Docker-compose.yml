name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Branche principale

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Environnement de test
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: steve
          MYSQL_DATABASE: pmt_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Utilisation de la dernière version de checkout

      # Étape 1 : Construction du projet frontend
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Utilisation de Node.js version 20
      - name: Install frontend dependencies
        run: |
          cd Desktop/tool_project/pmt-frontend
          npm install  # Installation des dépendances frontend
      - name: Build frontend project
        run: |
          cd Desktop/tool_project/pmt-frontend
          npm run build  # Construction du projet frontend

      # Étape 2 : Tests du frontend
      - name: Run frontend tests
        run: |
          cd Desktop/tool_project/pmt-frontend
          npm run test -- --watch=false  # Exécution des tests frontend

      # Étape 3 : Construction du projet backend
      - name: Set up Java for backend
        uses: actions/setup-java@v2
        with:
          java-version: '21'  # Utilisation de Java 21 pour le backend
          distribution: 'temurin'  # Distribution 'temurin' d'Adoptium
      - name: Install backend dependencies
        run: |
          cd Desktop/tool_project/pmt-backend2
          ./mvnw install  # Installation des dépendances backend
      - name: Build backend project
        run: |
          cd Desktop/tool_project/pmt-backend2
          ./mvnw package  # Construction du projet backend

      # Étape 4 : Attendre que MySQL soit prêt
      - name: Wait for MySQL to be ready
        run: |
          # Limiter l'attente de MySQL à 30 secondes pour ne pas bloquer indéfiniment
          for i in {1..6}; do
            if mysqladmin ping -h mysql --silent; then
              echo "MySQL is ready!"
              break
            else
              echo "Waiting for MySQL..."
              sleep 5
            fi
          done

      # Étape 5 : Tests du backend
      - name: Run backend tests
        run: |
          cd Desktop/tool_project/pmt-backend2
          ./mvnw test -Dspring.datasource.url=jdbc:mysql://mysql:3306/pmt_db -Dspring.datasource.username=root -Dspring.datasource.password=steve

  dockerize-and-publish:
    needs: build-and-test  # Ce job dépend des tests du job précédent
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Utilisation de la dernière version de checkout

      # Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nom d'utilisateur Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Mot de passe Docker Hub

      # Étape 1 : Dockerisation et push de l'image Docker pour le frontend
      - name: Build and push frontend Docker image
        run: |
          cd Desktop/tool_project/pmt-frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest

      # Étape 2 : Dockerisation et push de l'image Docker pour le backend
      - name: Build and push backend Docker image
        run: |
          cd Desktop/tool_project/pmt-backend2
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
